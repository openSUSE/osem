- if event.transition_possible? :accept
  %li= link_to 'Accept event',
  accept_admin_conference_program_event_path(@conference.short_title, event),
  method: :patch, id: "accept_event_#{event.id}"

  - if @conference.email_settings.send_on_accepted?
    %li= link_to 'Accept event (without email)',
    accept_admin_conference_program_event_path(@conference.short_title, event, send_mail: false),
    method: :patch, hint: 'Accept this event without sending an automated email.',
    id: "accept_event_without_mail_#{event.id}"

- if event.transition_possible? :reject
  %li= link_to 'Reject event',
  reject_admin_conference_program_event_path(@conference.short_title, event),
  method: :patch, confirm: 'Are you sure?', id: "reject_event_#{event.id}"

  - if @conference.email_settings.send_on_rejected?
    %li= link_to 'Reject event (without email)',
    reject_admin_conference_program_event_path(@conference.short_title, event, send_mail: false),
    method: :patch, confirm: 'Are you sure?', id: "reject_event_without_mail_#{event.id}"

- if event.transition_possible? :restart
  %li= link_to 'Start review',
  restart_admin_conference_program_event_path(@conference.short_title, event),
  method: :patch, id: "restart_event_#{event.id}"

- if event.transition_possible? :confirm
  %li= link_to 'Confirm event',
  confirm_admin_conference_program_event_path(@conference.short_title, event),
  method: :patch, id: "confirm_event_#{event.id}",
  hint: 'Confirm that the speaker(s) will be present and that the event will actually take place.'

- if event.transition_possible? :cancel
  %li= link_to 'Cancel event',
  cancel_admin_conference_program_event_path(@conference.short_title, event),
  method: :patch, id: "cancel_event_#{event.id}",
  hint: 'Mark this event as cancelled. Usually this means that the speakers had to cancel their appearance.'
