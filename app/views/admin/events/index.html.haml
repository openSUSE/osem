.row-fluid
  .span12
    %h2
      Events
      - if @events
        = "(#{@events.length})"
    .well
      %table.table.table-striped.table-bordered.table-hover#events
        %thead
          %th
            %b Title
          %th
            %b Submitter
          %th
            %b Type
          %th
            %b State
        - @events.each do |event|
          %tr
            %td
              =link_to event.title, admin_conference_event_path(@conference.short_title, event)
            %td
              - if !event.submitter.nil?
                =link_to event.submitter.public_name, admin_person_path(event.submitter)
              - else
                Unknown submitter
            %td
              = event.event_type.title
            %td
              - if event.state == "withdrawn"
                Withdrawn
              - else
                .dropdown
                  = link_to "#", :class => "dropdown-toggle" do
                    = event.state.humanize
                    <b class="caret"></b>
                  %ul.dropdown-menu
                    - if event.transition_possible? :accept
                      %li= link_to "Accept event (no email)", update_state_admin_conference_event_path(@conference.short_title, event, :transition => :accept, :send_mail => false),
                          :method => :put, :hint => "Accept this event without sending an automated email."
                      %li= link_to "Accept event (WITH email)", update_state_admin_conference_event_path(@conference.short_title, event, :transition => :accept, :send_mail => true),
                          :method => :put, :hint => "Accept this event and send an automated email."
                    - if event.transition_possible? :reject
                      %li= link_to "Reject event (no email)", update_state_admin_conference_event_path(@conference.short_title, event, :transition => :reject, :send_mail => false),
                          :method => :put, :confirm => "Are you sure?",
                          :hint => "Reject this event without sending an automated email."
                      %li= link_to "Reject event (WITH email)", update_state_admin_conference_event_path(@conference.short_title, event, :transition => :reject, :send_mail => true),
                          :method => :put, :confirm => "Are you sure?",
                          :hint => "Reject this event and send an automated email."
                    - if event.transition_possible? :start_review
                      %li= link_to "Start review", update_state_admin_conference_event_path(@conference.short_title, event, :transition => :start_review),
                          :method => :put
                    - if event.transition_possible? :confirm
                      %li= link_to "Confirm event", update_state_admin_conference_event_path(@conference.short_title, event, :transition => :confirm),
                                  :method => :put, :hint => "Confirm that the speaker(s) will be present and that the event will actually take place."
                    - if event.transition_possible? :cancel
                      %li= link_to "Cancel event", update_state_admin_conference_event_path(@conference.short_title, event, :transition => :cancel),
                        :method => :put, :hint => "Mark this event as cancelled. Usually this means that the speakers had to cancel their appearance."

:javascript
  $(document).ready(function() {
      $('#events').dataTable( {
        "bPaginate": false
      } );
  } );
