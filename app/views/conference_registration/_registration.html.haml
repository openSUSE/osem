.row
  .col-md-12
    %h3
      Registration for
      = @conference.title
- if @person.proposal_count(@conference) > 0
  .row
    .col-md-12
      %i
        Please note: Registration is not automatically performed for speakers.  If you're scheduled to speak at the conference, you still need to register!
.row
  .col-md-12
    = f.inputs :name => "Your Details" do
      %br
      Your public name (required)
      %br
      = f.fields_for :person do |p|
        = p.text_field :public_name, :for => :person

      - if @conference.questions
        = render :partial => "questions", :locals => {:f => f}
        %br

      - if @conference.use_supporter_levels? && @conference.supporter_levels.length > 0
        = f.semantic_fields_for :supporter_registration do |reg|
          = reg.input :supporter_level, :as => :select, :collection => @conference.supporter_levels
          = reg.input :code, :label => "Confirmation or registration code (if applicable)"
          %span#supporter-link.help-block

      = f.input :other_special_needs, :label => "Any other needs or comments?", :input_html => {:rows => 2, :class => "span6"}

      - if @workshops.count > 0
        =f.inputs "Register to workshops" do
          = f.input :events, :as => :check_boxes, :label => false, :collection => @workshops

    = f.inputs "Travel Info" do
      = f.input :arrival, :as => :string,  :input_html => {:value => (f.object.arrival.to_formatted_s(:db_without_seconds) unless f.object.arrival.nil?), :id => "registration-arrival-datepicker", :readonly => "readonly"  }
      = f.input :departure, :as => :string, :input_html => {:value => (f.object.departure.to_formatted_s(:db_without_seconds) unless f.object.departure.nil?), :id => "registration-departure-datepicker", :readonly => "readonly"  }
    - if @conference.social_events.count > 0
      = f.inputs "Are you planning to attend any of the parties?" do
        %br Yes, I'll be attending...
        %br
        = f.input :social_events, :as => :check_boxes, :label => false
    - if @conference.use_dietary_choices?
      = f.inputs "Food" do
        = f.input :dietary_choice, :collection => [["None", nil]] + @conference.dietary_choices.map {|x| [x.title, x.id]},
                  :include_blank => false, :label => "Special Dietary Restriction"
        = f.input :other_dietary_choice, :input_html => {:rows => "2"}, :label => "Other Dietary Restictions (please describe)"

:javascript
    $("#registration_supporter_registration_attributes_supporter_level_id").change(function () {
      var str = "";
      #{generate_supporter_level_js @conference}
      $("#supporter-link").html(str);
    })
    .trigger('change');

    $("#registration-arrival-datepicker").datetimepicker({
        dateFormat: "yy-mm-dd",
        timeFormat: "HH:mm",
        showSecond: false,
        numberOfMonths: 1,
        defaultDate: '#{@conference.start_date.yesterday.strftime('%Y-%m-%d')}',
        onSelect: function(selected) {
            $("#registration-departure-datepicker").datepicker("option","minDate", selected)
        }
    });

    $("#registration-departure-datepicker").datetimepicker({
        dateFormat: "yy-mm-dd",
        timeFormat: "HH:mm",
        showSecond: false,
        numberOfMonths: 1,
        defaultDate: '#{@conference.end_date.tomorrow.strftime('%Y-%m-%d')}',
        onSelect: function(selected) {
            $("#registration-arrival-datepicker").datepicker("option","maxDate", selected)
        }
    });
